# Default values for api-core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""

apiCore:
  fullNameOverride: ""
  replicaCount: 3

  image:
    repository: geduiapicore.azurecr.io/geduiapicore
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  
  service:
    type: ClusterIP
    port: 3333
  
  ingress:
    pathPrefix: "/"
    host: "api.dev.app.gedui.com.br"
  
  environmentVariables:
    AWS_ACCESS_KEY_ID: dummy
    AWS_SECRET_ACCESS_KEY: dummy
    AWS_REGION: us-east-1
    AWS_BUCKET_NAME: my-bucket

    APP_HOST: default-mysql.core.svc.cluster.local
    APP_USER: root
    APP_PASSWORD: BKFhw4Kd4B
    APP_DATABASE: geduidb
    APP_DATABASE_PORT: "3306"

    #SMTP VARIABLES
    APP_EMAIL: email@email.com.br
    APP_EMAIL_HOST: smtp.server.com.br
    APP_EMAIL_PORT: "465"
    APP_EMAIL_PASS: "!123456789"

    #EMAIL VARIABLES
    APP_EMAIL_FOOTER: barra_email_padrao.png
    APP_EMAIL_URL: http://localhost:3000/
  
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  imagePullSecrets: []
  podAnnotations:
    prometheus.io/scrape: 'true'
    # prometheus.io/path: '/metrics'
    # prometheus.io/port: '3333'
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000
  
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  
  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
